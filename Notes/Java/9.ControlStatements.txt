CONTROL STATEMENTS:
------------------------

There are three control statment

1. Selction statment
2. Iteration statment
3. Jump statment

SELECTION STATEMENT:
---------------------

1. If-Else statment:
--------------------

Syntax:
if(condition){
statment1 ....
}
else{
statment2 ....
}

2. If-ElseIf statment:
--------------------

Syntax:
if(condition){
statment1 ....
}
else if(condition){
statment2 ....
}
else{
statment3 ....
}

3. switch statment:
----------------------
Syntax:

switch(expression){
case value1: statment1
			 break;
case value2: statment2
			 break;
.
.
.
.
}


LOOPS/ITERATION STATMENT:
-----------------------
Do while : Execute once and then repeat things until loop condition is true
while : Repeat things until loop condition is true
for : Repeat things till the given number of times

1. do while:		It will execute until the condition is false
------------
Syntax:

do
{
statment...
}
while(condition is true)

2. while:
--------------
Syntax:

while(condition is true)
{
statment...
}

3. for :
---------------
Syntax:

for(initialisation;condition;iteration){
statment...
}


JUMP STATMENT:
------------------

1. Break:
---------
Syntax:
break;


Use of break in a while loop

public class BreakExample1 {
   public static void main(String args[]){
      int num =0;
      while(num<=100)
      {
          System.out.println("Value of variable is: "+num);
          if (num==2)
          {
             break;
          }
          num++;
      }
      System.out.println("Out of while-loop");
  }
}

Output:

Value of variable is: 0
Value of variable is: 1
Value of variable is: 2
Out of while-loop


Use of break in a for loop

public class BreakExample2 {

   public static void main(String args[]){
	int var;
	for (var =100; var>=10; var --)
	{
	    System.out.println("var: "+var);
	    if (var==99)
	    {
	         break;
	    }
	 }
	 System.out.println("Out of for-loop");
   }
}

Output:

var: 100
var: 99
Out of for-loop


Use of break statement in switch-case

public class BreakExample3 {

   public static void main(String args[]){
	int num=2;
	      
	switch (num)
	{
	    case 1:
	       System.out.println("Case 1 ");
	       break;
	    case 2:
	       System.out.println("Case 2 ");
	       break;
	    case 3:
	       System.out.println("Case 3 ");
	       break;
	    default:
	       System.out.println("Default ");
	}
   }
}

Output:

Case 2


2. Continue:	It is opposite to break
--------------
Syntax:
continue;


continue statement inside for loop

public class ContinueExample {

   public static void main(String args[]){
	for (int j=0; j<=6; j++)
	{
           if (j==4)
           {
	      continue;
	   }

           System.out.print(j+" ");
	}
   }
}
Output:

0 1 2 3 5 6


Use of continue in While loop

public class ContinueExample2 {

   public static void main(String args[]){
	int counter=10;
	while (counter >=0)
	{
           if (counter==7)
           {
	       counter--;
	       continue;
           }
           System.out.print(counter+" ");
           counter--;
	}
   }
}
Output:

10 9 8 6 5 4 3 2 1 0





